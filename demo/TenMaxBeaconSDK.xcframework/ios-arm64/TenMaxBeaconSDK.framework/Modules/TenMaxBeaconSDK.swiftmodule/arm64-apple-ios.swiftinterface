// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name TenMaxBeaconSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AdSupport
import AppTrackingTransparency
import CoreBluetooth
import CoreLocation
import Foundation
import Swift
import SystemConfiguration
import UIKit
import UserNotifications
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
public enum Environment {
  case stage
  case production
  public static func == (a: TenMaxBeaconSDK.Environment, b: TenMaxBeaconSDK.Environment) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum BeaconSettingsError : Swift.Error {
  case missingConfiguration
  case missingBeaconSettings
  case missingRequiredSetting(Swift.String)
  case invalidUUIDFormat(Swift.String)
  public var localizedDescription: Swift.String {
    get
  }
}
public class ClientProfile {
  public init(phoneNumber: Swift.String? = nil, email: Swift.String? = nil, appName: Swift.String, advertisingId: Swift.String? = nil)
  public func getPhoneNumber() -> Swift.String?
  public func getEmail() -> Swift.String?
  public func getAppName() -> Swift.String
  public func getAdvertisingId() -> Swift.String?
  public static func clearPersistedData()
  @objc deinit
}
public enum ReachabilityError : Swift.Error {
  case failedToCreateWithAddress(Darwin.sockaddr, Swift.Int32)
  case failedToCreateWithHostname(Swift.String, Swift.Int32)
  case unableToSetCallback(Swift.Int32)
  case unableToSetDispatchQueue(Swift.Int32)
  case unableToGetFlags(Swift.Int32)
}
@available(*, unavailable, renamed: "Notification.Name.reachabilityChanged")
public let ReachabilityChangedNotification: Foundation.NSNotification.Name
extension Foundation.NSNotification.Name {
  public static let reachabilityChanged: Foundation.Notification.Name
}
public protocol TenMaxAdBeaconCallback {
  func onInitialized()
  func onCreativeReceived(creative: TenMaxBeaconSDK.TenMaxAdCreative)
  func onError(error: TenMaxBeaconSDK.TenMaxAdBeaconError)
  func onNotificationClicked(creative: TenMaxBeaconSDK.TenMaxAdCreative)
}
public class TenMaxAdBeaconError : Swift.Error {
  final public let code: TenMaxBeaconSDK.TenMaxAdBeaconErrorType
  final public let message: Swift.String
  public init(code: TenMaxBeaconSDK.TenMaxAdBeaconErrorType, message: Swift.String)
  convenience public init(code: TenMaxBeaconSDK.TenMaxAdBeaconErrorType)
  @objc deinit
}
public enum TenMaxAdBeaconErrorType : Swift.Int, Swift.Error {
  case unauthorizedNotificationPermission
  case unauthorizedLocationPermission
  case locationPermissionNotAlways
  case bluetoothDisabled
  case bluetoothPermissionDenied
  case forbiddenFetchCreative
  case notFoundCreative
  case invalidCreative
  case configurationError
  case notInitialized
  case internetConnectionUnavailable
  case frequencyCapExceeded
  case unknown
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class TenMaxAdBeaconSDK {
  public static func shared() -> TenMaxBeaconSDK.TenMaxAdBeaconSDK
  public func initiate(clientProfile: TenMaxBeaconSDK.ClientProfile, callback: any TenMaxBeaconSDK.TenMaxAdBeaconCallback, environment: TenMaxBeaconSDK.Environment = .production)
  public func updateClientProfile(_ clientProfile: TenMaxBeaconSDK.ClientProfile)
  public func start()
  public func stop()
  public var isScanning: Swift.Bool {
    get
  }
  @objc deinit
}
extension TenMaxBeaconSDK.TenMaxAdBeaconSDK {
  public func onBeaconDetected(companyId: Swift.Int, spaceId: Swift.String, bindingId: Swift.Int)
}
public class TenMaxAdCreative {
  final public let data: Swift.String?
  final public let creativeId: Swift.Int
  final public let bindingId: Swift.Int
  final public let campaignId: Swift.Int
  final public let spaceId: Swift.String
  public init(data: Swift.String? = nil, creativeId: Swift.Int = 0, bindingId: Swift.Int = 0, campaignId: Swift.Int = 0, spaceId: Swift.String = "")
  @objc deinit
}
extension TenMaxBeaconSDK.Environment : Swift.Equatable {}
extension TenMaxBeaconSDK.Environment : Swift.Hashable {}
extension TenMaxBeaconSDK.TenMaxAdBeaconErrorType : Swift.Equatable {}
extension TenMaxBeaconSDK.TenMaxAdBeaconErrorType : Swift.Hashable {}
extension TenMaxBeaconSDK.TenMaxAdBeaconErrorType : Swift.RawRepresentable {}
